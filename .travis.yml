# 2015 August 25
# https://docpad.org/docs/deploy

sudo: false
language: node_js
node_js:
  - "6"     # lts
cache:
  directories:
    - $HOME/.npm  # http://stackoverflow.com/q/42521884/130638

install: |
  # Ensure NPM is latest
  # https://github.com/balupton/awesome-travis#ensure-npm-is-latest
  export CURRENT_NPM_VERSION="$(npm --version)" || exit -1
  export LATEST_NPM_VERSION="$(npm view npm version)" || exit -1
  if test "$CURRENT_NPM_VERSION" != "$LATEST_NPM_VERSION"; then
    echo "running an old npm version $CURRENT_NPM_VERSION, upgrading npm to $LATEST_NPM_VERSION..."
    npm install npm --global --cache-min=Infinity || exit -1
    echo "...npm upgrade complete"
  fi

install: |
  # Ensure dependencies install with a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  export CURRENT_NODE_VERSION="$(node --version)" || exit -1
  export LTS_NODE_VERSIONS="$(nvm ls-remote --lts)" || exit -1
  if echo "$LTS_NODE_VERSIONS" | grep "$CURRENT_NODE_VERSION"; then
    echo "running on a LTS node version, completing setup..."
    npm run our:setup || exit -1
    echo "...setup complete with current LTS version"
  else
    echo "running on a non-LTS node version, completing setup on a LTS node version..."
    nvm install --lts
    export LTS_NODE_INSTALLED_VERSION="$(node --version)" || exit -1
    npm run our:setup || exit -1
    nvm use "$TRAVIS_NODE_VERSION" || exit -1
    echo "...setup complete with LTS"
  fi

before_script: |
  # Ensure compilation and linting occur on a LTS node version
  # https://github.com/balupton/awesome-travis#use-lts-node-version-for-preparation
  if test "$LTS_NODE_INSTALLED_VERSION"; then
    echo "running on a non-LTS node version, compiling with LTS, skipping linting..."
    nvm use "$LTS_NODE_INSTALLED_VERSION" || exit -1
    npm run our:compile || exit -1
    nvm use "$TRAVIS_NODE_VERSION" || exit -1
    echo "...compiled"
  else
    echo "running on a LTS node version, compiling and linting..."
    npm run our:compile && npm run our:verify || exit -1
    echo "...compiled and linted"
  fi

after_success: |
  # Custom Deployment
  # https://github.com/balupton/awesome-travis#npm-script-deployment
  if ([ "$TRAVIS_BRANCH" == "$DEPLOY_BRANCH" ] &&
      [ -z "$TRAVIS_TAG" ] &&
      [ "$TRAVIS_PULL_REQUEST" == "false" ]); then
    echo "deploying..."
    npm run deploy || exit -1
    echo "...deployed"
  else
    echo "skipped deploy"
  fi


# ========================================
# Custom Configuration

env:
  global:
  # Custom Deploy
  # travis encrypt "SURGE_LOGIN=$SURGE_LOGIN" --add env.global
  # travis encrypt "SURGE_TOKEN=$SURGE_TOKEN" --add env.global
  - DEPLOY_BRANCH='master'
  - secure: JKee528hsUEH0lJmpXa1O6DJXM7CGXkuZ6INs2uAiiNUdhgum/CtERZEivF2P35twF14UUNEl4LxKT1loMA0S6q4zzM8e5dZSJEE+pA0UK1sfknvY+BBX3uF9JwkSQsLHVXTjBtsmd7TXgUJV5MNj71VHChW8T5by1tqsEaBI00=
  - secure: fp1rPUGo6cuc1DmrQPdHk90hNQY/3oT/ClQibdM3AnNC//qV10wQY2+vnUKau2x2dEPWVoMaJvVeJCEC+qbXsLhd3f4oV/yi67HoBmI5gP35Rz6ssaf5UeL56VR1GJCYnyItX+3/TGzUt039+v2aMwCJt4moXNTOIfaFjjRXpC4=

# https://github.com/balupton/awesome-travis#slack
# https://github.com/balupton/awesome-travis#email
notifications:
  slack:
    secure: nAAs02f2LHKm9/sLJBCYz9mVmH9WbGx0jFPpOX4maObPE6SlzLN6ucXyRuPzlNlDlvc5YY+19xdsPWrZ4tubPkBWdlUpxQxQYF4kCmkqY/M4Csa9+ThcjT7A/qb0oVmevFbRgJpjTEhQBWoRMfs0jzlotmwWx8QunDYOY3C89F4=
  email:
    recipients:
      secure: Mh0vdmlNlBqFC5vCGAbt3q+TNAuIOD6yAMa0NbnwasSDtFZte11NkGZyGUAYvZorVwpugzym79niSHkniY5r5VmvrJWVefRTzctvJde1ha7+uCguozVVG0qGC6lk7S/3tqRvc5FVYFs2mQysD0XXySpO1WQuBlV5xt3v3t88fBQ=
